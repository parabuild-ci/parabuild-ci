<?xml version="1.0"?>
<project name="bt" default="tests.deploy" basedir=".">

  <!-- Helpert to create test copies of autobuild for build manager and for remote agent -->
  <target name="test.product.copy">
    <echo message="Making test copy of product ..."/>
    <echo message="  Destination dir: ${dest.dir}"/>
    <echo message="  HTTP port      : ${http.port}"/>
    <echo message="  Server port    : ${serv.port}"/>
    <copy todir="${dest.dir}">
      <fileset dir="${build.dir.tomcat}"/>
    </copy>
    <copy file="${config}/server.xml" todir="${dest.dir}/etc/conf" overwrite="true">
      <filterset>
        <filter token="http.port" value="${http.port}"/>
        <filter token="serv.port" value="${serv.port}"/>
      </filterset>
    </copy>
    <chmod dir="${dest.dir}/bin" perm="ugo+rwx" excludes="*.bat,*.cmd,*.exe,*.dll"/>
  </target>


  <!-- Create test copies of autobuild for build manager and for remote agent -->
  <target name="test.prepare.servers">
    <property name="test.builder.http.port" value="10082"/>
    <property name="test.builder.serv.port" value="10007"/>
    <!-- prepare ports so that don't interfere with -->
    <if name="env.PARABUILD_BUILD_NUMBER">
      <property name="test.manager.http.port" value="9082"/>
      <property name="test.manager.serv.port" value="9007"/>
      <echo message="env.PARABUILD_BUILD_NUMBER=${env.PARABUILD_BUILD_NUMBER}"/>
      <break/>
      <else>
        <property name="test.manager.http.port" value="${tomcat.http.port}"/>
        <property name="test.manager.serv.port" value="${tomcat.serv.port}"/>
      </else>
    </if>
    <parallel>
      <!-- init test build manager using prepared ports -->
      <antcall target="test.product.copy">
        <param name="dest.dir" value="${test.dir.manager}"/>
        <param name="http.port" value="${test.manager.http.port}"/>
        <param name="serv.port" value="${test.manager.serv.port}"/>
      </antcall>
      <copy file="bin/startup_jprofiler.bat" tofile="${test.dir.manager}/bin/startup_jprofiler.bat"/>
      <!-- test agent, ports are fixed -->
      <antcall target="test.product.copy">
        <param name="dest.dir" value="${test.dir.builder}"/>
        <param name="http.port" value="${test.builder.http.port}"/>
        <param name="serv.port" value="${test.builder.serv.port}"/>
      </antcall>
    </parallel>
  </target>


  <!-- Compile tests -->
  <target name="tests.compile">
    <javac srcdir="${test.home}/src" destdir="${build.dir.test.classes}" includes="**/*.java" debug="on" includeantruntime="false">
      <compilerarg value="-proc:none"/>
      <classpath>
        <path refid="test.classpath"/>
        <pathelement path="${build.dir.classes}"/>
        <pathelement path="${installer.classes.dir}"/>
      </classpath>
    </javac>
  </target>


  <!-- jar tests -->
  <target name="tests.jar" depends="tests.compile,test.prepare.servers">
    <filter token="test.port" value="${test.manager.http.port}"/>
    <copy file="${test.config}/cactus.properties" todir="${build.dir.test.classes}" filtering="on"/>
    <copy file="${test.config}/test.log4j2.xml" tofile="${build.dir.test.classes}/log4j2.xml" overwrite="yes"/>
    <jar destfile="${build.dir.test.result}/tests.jar" index="true" compress="false">
      <fileset dir="${build.dir.test.classes}"/>
    </jar>
  </target>


  <!-- Prepare test war -->
  <target name="tests.prepare.war" depends="tests.jar">
    <!-- create dirs -->
    <mkdir dir="${test.war.staging}"/>
    <mkdir dir="${test.war.staging}/WEB-INF/lib"/>
    <mkdir dir="${test.war.staging}/WEB-INF/classes"/>
    <copy todir="${test.war.staging}" file="${test.config}/index.html"/>
    <copy todir="${test.war.staging}/WEB-INF/lib" file="${aspectjrt.jar}"/>
    <copy todir="${test.war.staging}/WEB-INF/lib" file="${build.dir.test.result}/tests.jar"/>
    <copy todir="${test.war.staging}/WEB-INF/lib" file="${cactus.jar}"/>
    <!--<copy todir="${test.war.staging}/WEB-INF/lib" file="${dbunit.dtdparser.jar}"/>-->
    <!--<copy todir="${test.war.staging}/WEB-INF/lib" file="${dbunit.exml.jar}"/>-->
    <copy todir="${test.war.staging}/WEB-INF/lib" file="${dbunit.jar}"/>
    <copy todir="${test.war.staging}/WEB-INF/lib" file="${httpclient.jar}"/>
    <copy todir="${test.war.staging}/WEB-INF/lib" file="${junit.jar}"/>
    <copy todir="${test.war.staging}/WEB-INF/lib" file="${gbase.jar}"/>
    <copy todir="${test.war.staging}/WEB-INF/lib" file="${junitaddons.jar}"/>
    <copy todir="${test.war.staging}/WEB-INF/lib" file="${httpunit.jar}"/>
    <copy todir="${test.war.staging}/WEB-INF/lib" file="${js.jar}"/>
    <copy todir="${test.war.staging}/WEB-INF/lib" file="${tidy.jar}"/>
    <copy todir="${test.war.staging}/WEB-INF/lib" file="${wsdl4j.jar}"/>

    <!-- NONE: vimeshev - 2006-10-08 - Copy installer classes
    so that we can run some tests against runnig server -->
    <copy todir="${test.war.staging}/WEB-INF/classes">
      <fileset dir="${installer.classes.dir}"/>
    </copy>

    <!-- copy test over product -->
    <unzip src="${build.dir}/result_war/parabuild.war" dest="${test.war.staging}"/>
    <copy file="${test.config}/test.log4j2.xml" tofile="${test.war.staging}/WEB-INF/classes/log4j2.xml" overwrite="yes"/>
  </target>


  <target name="tests.cactify.webxml" depends="tests.prepare.war">
    <!-- NOTE: vimeshev - 07/31/2004 - We copy the web.xml that has
         already got through product building stage filtering that
         sets up JSPs -->
    <copy file="${war.staging}/WEB-INF/web.xml" todir="${test.war.staging}/WEB-INF" filtering="on" overwrite="true">
      <filterset>
        <filter token="start.test.config" value="-->"/>
        <filter token="end.test.config" value="&lt;!--"/>
      </filterset>
    </copy>
  </target>


  <!-- Populate database with test dataset -->
  <target name="tests.dataset" unless="no.test.dataset">
    <property name="database.url" value="jdbc:hsqldb:${test.dir.manager}/etc/data/parabuild"/>
    <echo message="Populating test statabase at: ${database.url}"/>
    <echo message="                Test dataset: ${test.dataset}"/>
    <dbunit driver="org.hsqldb.jdbcDriver" url="${database.url}"
            userid="sa" password="p0a">
      <operation type="CLEAN_INSERT" src="${test.dataset}" format="flat"/>
    </dbunit>
    <!-- NOTE: vimeshev - 09/07/2004 - Call shutdown -
         HSQL 1.7.2 don't stop automatically when last connection is closed -->
    <sql autocommit="true" driver="org.hsqldb.jdbcDriver"
         url="${database.url}" userid="sa" password="p0a">
      SHUTDOWN COMPACT
    </sql>
  </target>


  <!-- Create war -->
  <target name="tests.war" depends="tests.cactify.webxml,tests.dataset">
    <mkdir dir="${build.dir}/test_war_result"/>
    <zip destfile="${build.dir}/test_war_result/parabuild.war" basedir="${test.war.staging}" update="true" compress="false"/>
  </target>


  <!-- Deploy war -->
  <target name="tests.deploy" depends="tests.war">
    <copy file="${build.dir}/test_war_result/parabuild.war" todir="${test.dir.manager}/etc/app" overwrite="true"/>
  </target>

</project>
